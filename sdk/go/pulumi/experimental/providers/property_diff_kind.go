// Copyright 2016-2023, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by "generate"; DO NOT EDIT.

//nolint:lll
package providers

import (
	pulumirpc "github.com/pulumi/pulumi/sdk/v3/proto/go"
)

// TODO
type PropertyDiffKind int

const (
	// This property was added.
	Add PropertyDiffKind = iota
	// This property was added, and this change requires a replace.
	AddReplace
	// This property was removed.
	Delete
	// This property was removed, and this change requires a replace.
	DeleteReplace
	// This property's value was changed.
	Update
	// This property's value was changed, and this change requires a replace.
	UpdateReplace
)

func (s *PropertyDiffKind) marshal() pulumirpc.PropertyDiff_Kind {
	switch s {
	case Add:
		return pulumirpc.PropertyDiff_ADD
	case AddReplace:
		return pulumirpc.PropertyDiff_ADD_REPLACE
	case Delete:
		return pulumirpc.PropertyDiff_DELETE
	case DeleteReplace:
		return pulumirpc.PropertyDiff_DELETE_REPLACE
	case Update:
		return pulumirpc.PropertyDiff_UPDATE
	case UpdateReplace:
		return pulumirpc.PropertyDiff_UPDATE_REPLACE
	}

	return 0
}

func (s *PropertyDiffKind) unmarshal(data pulumirpc.PropertyDiff_Kind) {
	switch s {
	case pulumirpc.PropertyDiff_ADD:
		s = Add
	case pulumirpc.PropertyDiff_ADD_REPLACE:
		s = AddReplace
	case pulumirpc.PropertyDiff_DELETE:
		s = Delete
	case pulumirpc.PropertyDiff_DELETE_REPLACE:
		s = DeleteReplace
	case pulumirpc.PropertyDiff_UPDATE:
		s = Update
	case pulumirpc.PropertyDiff_UPDATE_REPLACE:
		s = UpdateReplace
	}
}
