// Copyright 2016-2023, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by "generate"; DO NOT EDIT.

//nolint:lll
package providers

import (
	"time"

	"github.com/pulumi/pulumi/sdk/v3/go/common/resource"
	pulumirpc "github.com/pulumi/pulumi/sdk/v3/proto/go"
	codegenrpc "github.com/pulumi/pulumi/sdk/v3/proto/go/codegen"
)

// The response from diffing a resource.
type DiffResponse struct {
	// If this update requires a replacement, the set of properties triggering it.
	Replaces []string
	// An optional list of properties that will not ever change.
	Stables []string
	// If true, this resource must be deleted before replacing it.
	DeleteBeforeReplace bool
	// If true, this diff represents an actual difference and thus requires an update.
	Changes DiffChanges
	// A list of the properties that changed.
	Diffs []string
	// A detailed diff appropriate for display.
	DetailedDiff map[string]PropertyDiff
}

func (s *DiffResponse) marshal() *pulumirpc.DiffResponse {
	return &pulumirpc.DiffResponse{
		Replaces:            s.Replaces,
		Stables:             s.Stables,
		DeleteBeforeReplace: s.DeleteBeforeReplace,
		Changes:             s.Changes.marshal(),
		Diffs:               s.Diffs,
		DetailedDiff:        s.DetailedDiff,
		HasDetailedDiff:     true,
	}
}

func (s *DiffResponse) unmarshal(data *pulumirpc.DiffResponse) {
	s.Replaces = data.Replaces
	s.Stables = data.Stables
	s.DeleteBeforeReplace = data.DeleteBeforeReplace
	s.Changes.unmarshal(data.Changes)
	s.Diffs = data.Diffs
	if s.HasDetailedDiff {
		s.DetailedDiff = data.DetailedDiff
	}
}
